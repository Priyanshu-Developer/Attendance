
import random


class Main:
    # largest value 4 smallest value 2
    __code = [
        ['↺⊈⦻', '✛⊢⁌', '∅‒➚', 'ᐉ∐↶➥', 'ᚆ⏮✗ᐁ', '❀↸', '⊌ᚎ⋓∲', '⚆ↁ⋕', '࿗࿘', '✢⦽⊝', 'ᐄ⇉⛤', 'ᚁ⊔⋘', '⚀⿻⋛', '✻ↇ⧎✤', '✬❈➡✿',
         '•❉⧊⊓',
         'ᚋ⧭ᐇ‖', '⚃⊛', '⦶⛩∓', 'ᐗ⊠⊙', '∯⋗Ↄ✕', '❋☪', '┚⇆∪', '☳⁑', 'ᚈ┕➘', '⦬⊄', '⧨࿖⧑', '∭⦺➦✐', '⛦⧓❂⧔', '☩⁕⋐', '➢‣⧇⧫',
         '✶⧉⁝☶',
         '⧐┌↹', '࿕⁆⚉⊗', 'ᚇ⦨ↂ֎', 'ᚉᐆ⊘✸', '⧃⊍➫', '✷➟✒┓', '⁂⇈☭', 'ᐏ⚁ↈ⇊', '∈☵', '⋔➯¢✩', '└ᐕ┗ᐋ', '⊆⦼∊', '⊅┖…≫', 'ᐘ➠☴✮',
         '⛧ᐓ∏⦸',
         '∨⧋∑', '✲⧰', 'ᐚ⦹ᚂ', '⌚✯⊖✎', 'ᚏ❇', 'ᐎ⚈', '┍➮', '⊎✜', '⁊⁘∍', '∮⌗❃⊟', '✼⚇┏❅', '⚄ᐐ✥♽', '⧅☬✙', '➬➛⊣', '┑⁍⛥✣', '⊜☯⦵',
         '☸ᐔ—✽', '✖⦿✠✧', '⧲➙➝≪', '➧✔✭⦴', '−‑✑⋚', '⦲ᐍ✝⧯', '⁋⧳⊕⧮', '❁⧱⦰⧩', '✏⧕⛡', '⁙⧌∧↨', '∩⁓⌙', '⊡➩', '✟⇇⧒⊑', '⁛❆ᐙ➜',
         '✳✵⦯∌',
         'ᐑᐊ', '֍⧬⋑⚂', '⧪⊇┐⊒', '⦩⇄┘', '✰✚', '†✪ᐂ', '✹⧆⦳', '―⦫⋙ᐒ', '⛨☱⦱⁐', '⏯☷', '⊞➨ᚃ', '‗∉↷', 'ᐍ✢∨ↇ', '‒❋⋙', '•✔⊖',
         '⚁┛Ↄ≫',
         'ᐊ⧩⧱⚄', '∌ᚉ', '‑✬', '⌘➟⌛', '❁⧒⋖', '⊍⛧✰✳', 'ᚇ↨∧', '⊕➜∳⦳', '⊏∔⋛ᚊ', '∲➤ᐛ⊗', '↺⚆', '⇇✕⊔┙', 'ᐌ⧌', '⿻⊋ᚎ', '⋒┌✹✑',
         '✦⧔☮',
         '⁊⛡⊅❇', '⊛❆✺—', '⋔⧖', '✒⚉☶⦫', '⦿⧓✯', '⦯‡֍┘', '∅❃∊', 'ᐋ⦶⧨', '⚀∪⧊', 'ᐔ⧅', '✿⊞', '⁓⦱↸', '✚✻⁌┚', '☴⇅⊉⛢', 'ᚅ⦮⚅☵',
         '⦴⦲∓⁛', '⋕ᚋ➯⚈', '❉✭', 'ᐗ✙', '➭⁆⦸', '⧋ᐂ⛥✛', 'ᚂ┎ↁ', '⌗⋐⧆', '∍✾➫⧇', '⊟∭⏮⌚', '⊌ᚁ⇉⧲', '☫∏ᐁ', '✥⦽―ᐎ', '⋓‖≪⧉', '✡☱⊄',
         '➞⧂⊆✜', '┒❂⦭⁍', '⇈⛣', '⊡➠', '⊓✟⊠', '⦩➡∬⁋', '∐➩ᚌ', 'ᐑ✎┓↹', '✧⦵∎', '✱⇊', '☩∋', 'ↆᐃ⊣', '└࿗✘', '☯⧕', '➛➢⧫', '⧐⊐¢ᐈ',
         '∈┏✠☪', '✞ᐉ❈⊑', '✝⦺ᐆ', '⁑∯', '☬⚂⧰⧪', '⊎✐ᐄ┑', '☸⁂⧏', 'ᚏ➧➝', '⋚⧬ᚈ⁝', '−ᐘ', 'ᐚᐏ', '☳⛤⦬', '⊘⁖✵', 'ᐒᚆ∑', '⧁⌙ᐐ┕',
         '⊢⏭⧎',
         '⚃⁐', '✽ᐇ', '⧮ᐙ', '⧯⊒⦾', '࿕♽⋑', '♼⇄', '↶⋘┍⧈', '➚⁙⋗∉', 'ᐕ⊜⦰', '┖✗⛩⛨', '⚇⛦', '∩✪', '⦨➙ↂ⏯', '┐⊙', '⧭⦷', '↷ᚎ⚀ↈ',
         'ᐘ⋒',
         '⧭‗✏ↂ', '☩ᐏ⊌⦱', '‣⧪ᐎ❋', '✧✡➘❀', '⁛┍⦬ᚆ', 'ᐕ⋘', '✦➡┛➤', '⦪⊠ᚏ', 'ᐈᚂ⊆➙',
         '⧨⦰✤', '┚⊟∧⧖'],
        ['∑⋛', '☫✐⊉', '⁑ᐂ⧬⊋', '¢ᐓ⚃⧌', '⦨♾⧆', '⁊➧ᐖ', '⊔⊜⇉✜', '✚✎࿕', 'ᚇ⧋✾⧅', '⛧ᐑ┘', '⊄•⛤⊓', '⏮⊣ᐄ⇄', '∱⇈┏', '⧒⁙⊅⇇', '—⚇┓ᐐ',
         '⁝∲⧯', '⋗ᐉ', '⧱☸⦴', '☷✔⁓', '⁌⇅┐ᐛ', '♽⊙⦸', '⊈✑✝', '┖ᐌ', 'ᚍ⏭⦺∍', 'ↆᐋ', '⛥┗➟➦', 'ᚋ‒ᚈ⦷', '⛢…', '❁⁍', '⧩☪∋', '⧉✻ᐙᚅ',
         '⚆✞⊐∭', '࿘⦹✖', '☴✿⊢', '┑┕➞', '⊛❉‑', '⁋➪ᚃ', '↸⦮࿖', '✽➫✙✯', '⚅↶', '♼⛩⧐⛡', '∮ᐁ∇', '❂⧲ᐇ✰', '∐ᚉ↹', '⿻⋑⧰❇', '⊘⧎✕⦻',
         '☬⦵',
         '➮☶', '⧔✢ᐒ', '⦩⧳ᚊ', '֎⏯', '∳➛⧕', 'ᐆ☯⊎', '֍∩✼ᐍ', '⊡∏∨⦾', '⁂➝⧊', '―⛣☱ᚄ', '☭✺⌗⧏', '⦶⦿', '➥➜⌙⊖', '∊✩⧈', '∌⇆',
         '✱⧃⌘⧀',
         '➨┒⁘', 'ↇ⁖⌛ᐅ', '❈∪⦼', '✲⊇', '⋕✠⦭', '✭✣⋚', '⁕ᚁ└⊗', '⊕≫∬⦯', '–⚈⦳', '†⧁∎➩', '⧓ↁ', '≪⦲⋓➠', '⧖✱⇉∓', '✖⋘☵', '┌✣࿖ᚎ',
         '➘ᚂ',
         '⁖✛⊑┐', '⛩✳ᐍ✻', '֍ᐑ✑ᐋ', '⚃⛣ᐙ⋖', '−‗┍┕', '↨⧬', '☮‣', 'ᐒᐁ⁌', '—✦', '⋒✷⋕', '⛤➞❀⊞', 'ᐐ∍✡⧱', '⚇↶⊛⚆', '┙☭✚⊕', '⊈ᚍ∩',
         '⧲⊓⊎⊙', '⁓⧮⌛⌘', '⧩⊅∑', '⚁∪', '―ᚃ☴↸', '✕ᐉ⧕✲', '⦹☬ᐗ', 'ↈ⦫✎', '⁋ᐔ✭', '֎✙', '⁛✫☷', 'ᐏ⊖', '∲ᐚ⇅‖', '⦼➝∏', '➜⁊',
         '❉➨☶',
         '⊔✐∇ᚊ', '⧔⋗⊋ↆ', 'ↇᚄ✝⧉', '¤∋⁕', '⧯ᚇ⧃', '⧇⦴✸∱', '⋛⛥', '⧗ᐊ♾⧂', '⚉┓➮', '⦲⧓', '∊┛ↁ⋓', '⊌✗⦯', '⧀⦸✪', '✤⋑➟⁘', '⇈ᐕ',
         '⧨☩ᐇ',
         '‑ᚆ✟∔', '⧐⏮❈⛦', '➩⋐⊣➠', '⊏⦿⚄', '…⦳⌚ᚋ', '⧑∧ᚅ➪', '࿕✯↷', '♼✾', '❂⇄ᐛ', '⌙∉', '⧎⧊✬', '✜➦', '✵⛨•', '⧌✥∬', '⊡➤ᚉ⿻',
         '┘⦵⋙',
         '⚀➡⧒', '∐➫ᐆ', '✞⛡', '⦱࿘', '✒⦺⋔➢', '✧☱⊆', '✠⊢', '⊠➥', '↹¢⦪', '⧈⁝⁆❅', '⛢ᐂ', '┗⧭⏭', '✮ᐌ', '≪Ↄ┚', '∎∳', '┎➛⊗⦬',
         'ᐃ∮',
         '⧪⧫⌗', '⧅❋⇇⊇', 'ᚁ↺✽', '⧋➭∯', '⦽⁍⦩', '⋚⁑⦶', '✩⦮ᐄ', '❇ᐘ∈⊉', '⊍⊝✿➚', '♽✏∭➙', '✢✘☪❁', '❆➬⊐✺', '⦻↺⊈', '⊢⁌✛', '∅➚‒',
         '➥∐ᐉ↶', '✗ᚆᐁ⏮', '↸❀', '∲⊌⋓ᚎ', 'ↁ⋕⚆', '࿘࿗', '⦽⊝✢', 'ᐄ⛤⇉', '⋘⊔ᚁ', '⿻⚀⋛', '✻✤ↇ⧎', '✬➡✿❈', '⊓•⧊❉', '⧭ᚋᐇ‖', '⊛⚃',
         '∓⛩⦶',
         '⊙⊠ᐗ', '⋗✕Ↄ∯', '☪❋', '∪┚⇆', '⁑☳', '┕ᚈ➘', '⊄⦬', '࿖⧨⧑',
         '➦⦺∭✐', '⛦❂⧓⧔'],
        ['☩⋐⁕', '⧇‣➢⧫', '☶⧉⁝✶', '┌⧐↹', '⊗⁆࿕⚉', 'ↂᚇ⦨֎', 'ᚉ✸ᐆ⊘', '➫⧃⊍', '✒✷➟┓', '⁂☭⇈', '⇊ᐏↈ⚁', '☵∈', '➯✩¢⋔', 'ᐋᐕ┗└',
         '∊⦼⊆',
         '≫┖…⊅', '✮ᐘ➠☴', '⛧⦸ᐓ∏', '∑⧋∨', '⧰✲', 'ᐚᚂ⦹', '⌚✎✯⊖', '❇ᚏ', '⚈ᐎ', '➮┍', '✜⊎', '∍⁘⁊', '❃⌗⊟∮', '┏✼⚇❅', 'ᐐ⚄♽✥',
         '✙⧅☬',
         '➛➬⊣', '✣┑⛥⁍', '⦵⊜☯', '✽☸ᐔ—', '✧⦿✖✠', '➙≪⧲➝', '⦴➧✭✔', '‑−✑⋚', 'ᐍ✝⦲⧯', '⊕⁋⧳⧮', '❁⧩⧱⦰', '⛡✏⧕', '⧌⁙↨∧', '⁓∩⌙',
         '➩⊡',
         '⊑⧒⇇✟', '❆ᐙ➜⁛', '✳∌✵⦯', 'ᐊᐑ', '⚂⧬֍⋑', '┐⧪⊒⊇', '┘⦩⇄', '✚✰', 'ᐂ†✪', '✹⦳⧆', 'ᐒ⋙―⦫', '⛨⁐☱⦱', '☷⏯', 'ᚃ⊞➨', '∉‗↷',
         '✢∨ↇᐍ', '❋‒⋙', '⊖✔•', '≫┛⚁Ↄ', '⧩⚄ᐊ⧱', 'ᚉ∌', '✬‑', '⌛⌘➟', '⋖⧒❁', '⛧✰⊍✳', '↨ᚇ∧', '➜∳⦳⊕', '⋛⊏∔ᚊ', '➤⊗ᐛ∲', '⚆↺',
         '⊔┙✕⇇', '⧌ᐌ', '⿻ᚎ⊋', '✑┌✹⋒', '⧔☮✦', '⁊⛡❇⊅', '✺❆⊛—', '⧖⋔', '⚉⦫☶✒', '✯⧓⦿', '‡֍┘⦯', '∅∊❃', 'ᐋ⧨⦶', '⧊∪⚀', '⧅ᐔ',
         '⊞✿',
         '↸⁓⦱', '✚⁌┚✻', '⇅⊉☴⛢', '⦮☵ᚅ⚅', '∓⁛⦲⦴', '➯⚈⋕ᚋ', '✭❉', '✙ᐗ', '⁆⦸➭', '⧋✛⛥ᐂ', 'ᚂↁ┎', '⋐⌗⧆', '∍⧇➫✾', '∭⌚⊟⏮', '⇉⊌⧲ᚁ',
         '∏ᐁ☫', '―ᐎ✥⦽', '⧉⋓‖≪', '⊄✡☱', '➞⧂✜⊆', '┒❂⁍⦭', '⛣⇈', '➠⊡', '✟⊠⊓', '⁋➡∬⦩', '➩∐ᚌ', '✎┓↹ᐑ', '✧∎⦵', '⇊✱', '∋☩',
         '⊣ↆᐃ',
         '✘└࿗', '⧕☯', '➢➛⧫', '⧐⊐ᐈ¢', '☪┏∈✠', 'ᐉ✞⊑❈', 'ᐆ✝⦺', '∯⁑', '⚂☬⧪⧰', '✐⊎┑ᐄ', '⧏⁂☸', '➝ᚏ➧', '⁝⧬ᚈ⋚', 'ᐘ−', 'ᐏᐚ',
         '☳⦬⛤',
         '✵⊘⁖', 'ᚆᐒ∑', '⌙┕ᐐ⧁', '⧎⏭⊢', '⁐⚃', 'ᐇ✽', 'ᐙ⧮', '⦾⊒⧯', '♽⋑࿕', '⇄♼', '⧈┍↶⋘', '⋗➚∉⁙', '⊜ᐕ⦰', '⛩✗┖⛨', '⛦⚇', '✪∩',
         '➙ↂ⦨⏯', '⊙┐', '⦷⧭', '⚀ᚎↈ↷', '⋒ᐘ', 'ↂ⧭✏‗', '☩⦱⊌ᐏ', '‣ᐎ❋⧪', '✧❀✡➘', '⦬┍⁛ᚆ', '⋘ᐕ', '➤➡✦┛', 'ᚏ⦪⊠', '⊆ᐈᚂ➙', '✤⦰⧨',
         '∧┚⧖⊟', '⋛∑', '☫⊉✐', 'ᐂ⧬⁑⊋', '⚃ᐓ⧌¢', '⦨⧆♾', '⁊ᐖ➧', '⊔✜⇉⊜', '✚࿕✎', '⧋✾⧅ᚇ', 'ᐑ⛧┘', '⛤⊄⊓•', '⏮⇄ᐄ⊣', '┏⇈∱', '⁙⊅⇇⧒',
         '┓—ᐐ⚇', '∲⧯⁝', 'ᐉ⋗', '⧱⦴☸', '✔☷⁓', '⇅┐⁌ᐛ', '⊙♽⦸', '✝⊈✑', 'ᐌ┖', '∍ᚍ⦺⏭', 'ᐋↆ',
         '┗➟⛥➦', '‒⦷ᚈᚋ', '…⛢', '⁍❁'],
        ['∋☪⧩', 'ᚅ✻ᐙ⧉', '∭✞⚆⊐', '✖⦹࿘', '⊢✿☴', '┑➞┕', '❉‑⊛', '➪ᚃ⁋', '⦮࿖↸', '✙➫✯✽', '↶⚅', '⛡♼⧐⛩', '∮∇ᐁ', '⧲✰ᐇ❂', 'ᚉ↹∐',
         '⧰⋑❇⿻', '⧎⦻✕⊘', '⦵☬', '☶➮', 'ᐒ⧔✢', '⧳ᚊ⦩', '⏯֎', '➛⧕∳', '☯ᐆ⊎', '֍ᐍ∩✼', '∨⊡∏⦾', '⧊➝⁂', '☱⛣ᚄ―', '⌗⧏✺☭', '⦿⦶',
         '➜⊖⌙➥',
         '⧈∊✩', '⇆∌', '✱⌘⧃⧀', '┒➨⁘', '⌛ᐅ⁖ↇ', '∪❈⦼', '⊇✲', '⦭⋕✠', '⋚✭✣', '⊗⁕ᚁ└', '⊕⦯∬≫', '⦳⚈–', '⧁∎†➩', 'ↁ⧓', '➠⦲≪⋓',
         '∓⇉⧖✱',
         '⋘☵✖', '┌✣ᚎ࿖', 'ᚂ➘', '✛⁖┐⊑', '✻✳⛩ᐍ', '✑ᐑᐋ֍', '⋖⚃⛣ᐙ', '−‗┕┍', '⧬↨', '‣☮', 'ᐁᐒ⁌', '✦—', '⋒⋕✷', '➞❀⊞⛤', 'ᐐ⧱✡∍',
         '⊛↶⚆⚇', '⊕✚☭┙', 'ᚍ∩⊈', '⊙⊓⊎⧲', '⌘⁓⧮⌛', '∑⊅⧩', '∪⚁', 'ᚃ↸☴―', '⧕✲✕ᐉ', 'ᐗ☬⦹', '✎⦫ↈ', '✭ᐔ⁋', '✙֎', '⁛☷✫', '⊖ᐏ',
         '‖∲ᐚ⇅',
         '∏➝⦼', '⁊➜', '☶❉➨', '⊔ᚊ✐∇', '⋗ↆ⧔⊋', 'ᚄ✝ↇ⧉', '∋⁕¤', '⧯⧃ᚇ', '⧇∱✸⦴', '⛥⋛', '♾⧂ᐊ⧗', '┓⚉➮', '⧓⦲', 'ↁ┛⋓∊', '⊌⦯✗',
         '✪⦸⧀',
         '⁘➟⋑✤', 'ᐕ⇈', '⧨ᐇ☩', 'ᚆ✟∔‑', '❈⏮⛦⧐', '⊣➩➠⋐', '⦿⚄⊏', 'ᚋ⌚…⦳', '∧➪ᚅ⧑', '↷✯࿕', '✾♼', 'ᐛ❂⇄', '∉⌙', '✬⧊⧎', '➦✜',
         '⛨✵•',
         '∬✥⧌', '⊡➤⿻ᚉ', '⋙⦵┘', '➡⧒⚀', '➫ᐆ∐', '⛡✞', '࿘⦱', '⦺✒⋔➢', '⊆☱✧', '⊢✠', '➥⊠', '¢↹⦪', '⧈❅⁆⁝', 'ᐂ⛢', '⏭┗⧭', 'ᐌ✮',
         'Ↄ┚≪',
         '∳∎', '⦬⊗┎➛', '∮ᐃ', '⧫⌗⧪', '⧅❋⊇⇇', '✽↺ᚁ', '➭∯⧋', '⦽⦩⁍', '⁑⋚⦶', 'ᐄ✩⦮', '⊉∈ᐘ❇', '⊍✿➚⊝', '∭➙♽✏', '☪✘❁✢', '⊐✺➬❆',
         '⦭⌛┛', '⊋⋖', '⚅➭', 'ᚍ∎', 'ᚄ⛢', '⇅ᐖ⏭⛣', '⧂☮✱⊏', '⊐✺', '∔ᐈ⋒', '⧁┒', '⁖–∱', '✦┙', 'ᐃ⦪', '┎ᐛ', 'ᚅᐌ', '✘∳', '¤⦾',
         '⌘♼',
         '➞♾', '⧈☫', 'ↆ➤', 'ᚊ⧀', '‡✡', '✫✞', '⦮ᚌ', '⦷∬', '⧖✾ᐅ', '⊉➪', '∇⧗', '∋⧏', '⊈➬✲', '➘⁕ᚃ', '–࿘', '✖⇆', '¤✫✩', 'ᚄᐅ',
         '⦹✮∇', '✼ᐖ', '⦻⧑', '⧗⁘⧳', '⊝⧃', '✣…࿖➮', '✸┗', '➥⦪∮✶', '⦼֎', 'ᚍ❀', '∱➦➨‗', '☭⊇', '‣✤', '☷ↈ', '†✏', '➪♾', 'ᐓ✷',
         '☳❅',
         'ᚌ✷✶⧗',
         '↨−', '⁐⧇⋙☵', '⊞⦽'],
        ['┎⊏Ↄ', '✫➭', 'ᐔ➢', '⇊⁆', '➯☮✛', '⌚⊑', '⛦┙', '✪⦫', '✬✵⧑', 'ᐚ∈⚉', '✳∔', '∅⊍✒', 'ᐃ⋐', '⋖✹', '⛨⋔✥', '✗࿗', '‡‖',
         '¤✘∯⚂',
         '↺✮', '∉❃⚄', '⊝⊒', '⚁┌', '∓✸', '➬⧫', '✟⧮', '➚ᐗ', '❆ᐊ', '⦾⧰', 'ᐖ∅ᚌ', '┑☳‡', '⦷⊜', '☯⦻∨', '⧆⇊', '⏯✶', '⚂⚈', '✹ᐎ',
         '⦰⁂✼', 'ᐈ✰', 'ᚏ┒', '࿗–', '†⁐ᚈ', '⊒❃✔', '⧁ᐅ⇆', '⦨┏', '‒└', '⚅☸', '➧⊘', '≫⛧', '⧏┖➯', '⧳⁙ↂ', '⊄⦭', '✳✰⛧⊍', '∧↨ᚇ',
         '⦳∳➜⊕', 'ᚊ⋛∔⊏', '⊗ᐛ➤∲', '┙⊔✕⇇', 'ᚎ⊋⿻', '✑✹┌⋒', '☮⧔✦', '❇⊅⛡⁊', '—✺❆⊛', '⦫☶⚉✒', '┘֍‡⦯', '∊❃∅', '⧨⦶ᐋ', '↸⦱⁓',
         '┚⁌✻✚',
         '⛢⊉⇅☴', '☵⚅⦮ᚅ', '⁛∓⦲⦴', '⚈➯ᚋ⋕', '⦸⁆➭', '✛⛥ᐂ⧋', 'ↁ┎ᚂ', '⧆⋐⌗', '⧇➫✾∍', '⌚⏮∭⊟', '⧲⇉ᚁ⊌', 'ᐁ∏☫', 'ᐎ―⦽✥', '⧉≪‖⋓',
         '⊄☱✡',
         '✜⊆⧂➞', '⁍⦭❂┒', '⊠✟⊓', '⁋∬➡⦩', 'ᚌ➩∐', '↹┓✎ᐑ', '∎⦵✧', '⊣ᐃↆ', '✘࿗└', '⧫➢➛', 'ᐈ¢⊐⧐', '☪✠┏∈', '⊑❈ᐉ✞', 'ᐆ⦺✝',
         '⧪⧰⚂☬',
         '┑ᐄ✐⊎', '➝➧ᚏ', '⁝ᚈ⧬⋚', '⦬⛤☳', '✵⁖⊘', '∑ᚆᐒ', '┕ᐐ⌙⧁', '⋑♽࿕', '⧈┍⋘↶', '∉⋗⁙➚', '⦰⊜ᐕ', '⛨⛩✗┖', '⏯ↂ➙⦨', 'ↈ⚀ᚎ↷',
         'ↂ✏‗⧭',
         '⦱⊌ᐏ☩', '❋ᐎ⧪‣', '❀➘✡✧', 'ᚆ⦬┍⁛', '➤┛➡✦', 'ᚏ⊠⦪', '➙⊆ᚂᐈ', '⧖∧⊟┚', '⊉✐☫', '⊋⧬ᐂ⁑', '⧌⚃ᐓ¢', '⧆♾⦨', 'ᐖ➧⁊', '✜⇉⊜⊔',
         '࿕✎✚',
         '⧅✾⧋ᚇ', '┘ᐑ⛧', '⊓⛤•⊄', '⇄ᐄ⊣⏮', '⇇⊅⁙⧒', 'ᐐ┓⚇—', '⧯∲⁝', '⦴☸⧱', '⁓✔☷', 'ᐛ┐⇅⁌', '⦸⊙♽', '✝✑⊈', '∍⦺⏭ᚍ', '➦➟┗⛥',
         '⦷ᚈ‒ᚋ',
         'ᚅᐙ✻⧉', '∭⊐✞⚆', '➞┕┑', '‑❉⊛', 'ᚃ➪⁋', '࿖⦮↸', '✯✙➫✽', '⛡⧐⛩♼', '∇ᐁ∮', '✰ᐇ⧲❂', '↹ᚉ∐', '❇⧰⋑⿻', '⦻✕⧎⊘', 'ᐒ✢⧔', 'ᚊ⧳⦩',
         '⧕➛∳', '⊎☯ᐆ', 'ᐍ✼∩֍', '⦾∨∏⊡', 'ᚄ☱⛣―', '⧏⌗✺☭', '⊖⌙➜➥', '⧈✩∊', '⧀⌘⧃✱', '⁘┒➨', 'ᐅ⌛⁖ↇ', '⦼∪❈', '⦭✠⋕', '⋚✣✭',
         '⊗└ᚁ⁕',
         '⦯∬≫⊕', '➩∎⧁†', '➠⋓⦲≪', '∓⇉✱⧖', '☵⋘✖', 'ᚎ࿖✣┌', '┐⊑✛⁖', '✻ᐍ✳⛩', 'ᐋ✑ᐑ֍', '⋖ᐙ⛣⚃', '┕┍‗−', '⁌ᐁᐒ', '⋕✷⋒', '⊞❀➞⛤',
         '⧱✡∍ᐐ', '⚆⊛↶⚇', '∩ᚍ⊈', '⊙⊎⊓⧲', '⌘⌛⧮⁓', '↸☴ᚃ―', '✲⧕ᐉ✕', '☷✫⁛', '‖⇅ᐚ∲',
         '☶➨❉', 'ᚊ∇✐⊔', 'ↆ⊋⋗⧔', '⧉✝ᚄↇ'],
        ['⁕∋¤', '⧃ᚇ⧯', '∱✸⦴⧇', '⧂♾ᐊ⧗', '➮┓⚉', '⋓ↁ┛∊', '⦯✗⊌', 'ᐇ☩⧨', '∔✟ᚆ‑', '⛦❈⏮⧐', '➠⊣⋐➩', '⚄⦿⊏', 'ᚋ⌚⦳…', '➪ᚅ∧⧑',
         'ᐛ⇄❂',
         '•⛨✵', '⿻ᚉ➤⊡', '⧒➡⚀', 'ᐆ➫∐', '➢⋔⦺✒', '⦪¢↹', '❅⁆⁝⧈', '⏭⧭┗', '┚Ↄ≪', '⦬⊗➛┎', '⌗⧫⧪', '⊇⇇❋⧅', '∯➭⧋', '⦩⁍⦽', '⦶⁑⋚',
         'ᐄ⦮✩', '➚✿⊝⊍', '➙∭✏♽', '❁☪✘✢', '✺⊐➬❆', '⊈↺⦻', '✛⁌⊢', '‒➚∅', '↶ᐉ∐➥', '⏮ᐁᚆ✗', 'ᚎ⋓⊌∲', '⚆⋕ↁ', '✢⊝⦽', '⇉⛤ᐄ', '⋛⚀⿻',
         '⧎ↇ✤✻', '❈✿➡✬', '❉⧊•⊓', '‖ᐇᚋ⧭', '∯Ↄ✕⋗', '⇆┚∪', '➘ᚈ┕', '⧑⧨࿖', '✐∭⦺➦', '⧔⧓❂⛦', '⁕⋐☩', '⧫➢‣⧇', '✶⁝⧉☶', '↹⧐┌',
         '⚉࿕⁆⊗',
         '֎⦨ᚇↂ', '⊘ᐆ✸ᚉ', '⊍⧃➫', '┓➟✷✒', '⇈☭⁂', '⚁ↈᐏ⇊', '⋔¢✩➯', '└┗ᐕᐋ', '⊅…┖≫', '☴➠ᐘ✮', '∏ᐓ⦸⛧', '⦹ᚂᐚ', '⊖✯✎⌚', '∮⊟⌗❃',
         '❅⚇✼┏', '✥♽⚄ᐐ', '☬⧅✙', '⊣➬➛', '⁍⛥┑✣', '☯⊜⦵', '—ᐔ☸✽', '✠✖⦿✧', '➝⧲≪➙', '✔✭➧⦴', '⋚✑−‑', '⧯⦲✝ᐍ', '⧮⧳⁋⊕', '⦰⧱⧩❁',
         '⧕✏⛡',
         '∧↨⁙⧌', '⌙∩⁓', '⁛➜ᐙ❆', '⦯✵∌✳', '⋑֍⧬⚂', '⊇⊒⧪┐', '⇄⦩┘', '✪†ᐂ', '⧆⦳✹', '⦫―⋙ᐒ', '⦱☱⁐⛨', '➨⊞ᚃ', '↷‗∉', 'ᐍↇ∨✢',
         '⋙‒❋',
         'Ↄ⚁┛≫', '⧱ᐊ⚄⧩', '➟⌘⌛', '✳⊍✰⛧', '∧ᚇ↨', '⊕⦳∳➜', 'ᚊ∔⊏⋛', '∲ᐛ⊗➤', '⇇✕┙⊔', '⊋ᚎ⿻', '⋒✹┌✑', '✦☮⧔', '⊅❇⛡⁊', '—⊛❆✺',
         '✒☶⦫⚉',
         '⦯┘֍‡', '❃∊∅', '⦶⧨ᐋ', '⦱⁓↸', '✻┚⁌✚', '⛢☴⊉⇅', '⚅ᚅ☵⦮', '⦴⦲⁛∓', 'ᚋ⋕⚈➯', '➭⦸⁆', 'ᐂ⛥✛⧋', '┎ↁᚂ', '⧆⌗⋐', '✾➫⧇∍',
         '⏮⊟⌚∭',
         'ᚁ⧲⊌⇉', '☫ᐁ∏', '⦽✥ᐎ―', '≪‖⋓⧉', '☱✡⊄', '⊆✜⧂➞', '⦭⁍❂┒', '⊓⊠✟', '⦩∬➡⁋', 'ᚌ∐➩', 'ᐑ↹┓✎', '⦵∎✧', 'ᐃↆ⊣', '࿗└✘', '⧫➛➢',
         '¢ᐈ⊐⧐', '✠∈┏☪', '❈⊑✞ᐉ', '⦺✝ᐆ', '⧰⧪☬⚂', 'ᐄ┑⊎✐', '➧ᚏ➝', '⋚ᚈ⧬⁝', '⛤⦬☳', '⁖⊘✵', '∑ᐒᚆ', '⧁ᐐ┕⌙', '࿕⋑♽', '⋘↶┍⧈',
         '⁙∉➚⋗',
         '⦰ᐕ⊜', '⛨┖✗⛩', '⏯⦨ↂ➙', '↷ↈᚎ⚀', '‗✏⧭ↂ', 'ᐏ⊌⦱☩', '⧪❋ᐎ‣', '➘✡❀✧', 'ᚆ⁛┍⦬', '┛✦➡➤', '⊠⦪ᚏ', '➙ᚂᐈ⊆', '⊟⧖┚∧', '✐⊉☫',
         '⊋⁑⧬ᐂ', '¢⧌ᐓ⚃', '♾⧆⦨', '➧ᐖ⁊', '⊜⇉✜⊔', '✎࿕✚', 'ᚇ⧅✾⧋', '┘⛧ᐑ', '•⊓⊄⛤', '⊣ᐄ⇄⏮', '⧒⇇⊅⁙', '⚇ᐐ—┓', '⁝⧯∲', '☸⦴⧱',
         '⁓☷✔',
         'ᐛ⁌┐⇅', '⦸♽⊙', '✑⊈✝',
         '⏭⦺ᚍ∍', '➦⛥➟┗', 'ᚋᚈ⦷‒', '⧉ᐙ✻ᚅ'],
        ['⊐⚆✞∭', '┕➞┑', '⊛‑❉', '⁋ᚃ➪', '↸࿖⦮', '✽✯➫✙', '⛩⧐♼⛡', 'ᐁ∇∮', '❂ᐇ✰⧲', '∐↹ᚉ', '⿻❇⋑⧰', '⊘✕⦻⧎', '✢⧔ᐒ', '⦩ᚊ⧳', '∳⧕➛',
         '⊎ᐆ☯', '✼∩ᐍ֍', '⦾∏⊡∨', '―ᚄ⛣☱', '☭✺⧏⌗', '➥⌙⊖➜', '✩∊⧈', '⧀⧃⌘✱', '⁘➨┒', 'ↇ⁖ᐅ⌛', '⦼❈∪', '✠⋕⦭', '✣✭⋚', '└ᚁ⁕⊗',
         '≫∬⦯⊕',
         '➩†∎⧁', '⋓≪⦲➠', '✱⧖⇉∓', '✖☵⋘', '࿖ᚎ✣┌', '⊑┐⁖✛', 'ᐍ⛩✳✻', '֍ᐋᐑ✑', 'ᐙ⛣⚃⋖', '┍┕‗−', '⁌ᐒᐁ', '✷⋕⋒', '⛤⊞❀➞', '∍✡⧱ᐐ',
         '⚇⚆↶⊛', '⊈∩ᚍ', '⧲⊎⊓⊙', '⌛⧮⁓⌘', '―☴↸ᚃ', 'ᐉ✕✲⧕', '✫☷⁛', '⇅ᐚ∲‖', '➨❉☶', '∇✐ᚊ⊔', '⊋⧔ↆ⋗', '⧉ↇ✝ᚄ', '¤⁕∋', 'ᚇ⧃⧯',
         '⦴✸∱⧇',
         '⧗ᐊ⧂♾', '➮⚉┓', '∊⋓┛ↁ', '✗⦯⊌', '☩ᐇ⧨', '‑∔✟ᚆ', '⧐⛦⏮❈', '⋐➠➩⊣', '⊏⚄⦿', '⦳…⌚ᚋ', '⧑ᚅ➪∧', '⇄❂ᐛ', '•✵⛨', 'ᚉ⿻➤⊡',
         '⚀⧒➡',
         '∐ᐆ➫', '➢⋔✒⦺', '⦪↹¢', '⁝⁆❅⧈', '⧭┗⏭', '≪┚Ↄ', '➛┎⊗⦬', '⧪⌗⧫', '⇇⊇❋⧅', '⧋∯➭', '⁍⦩⦽', '⦶⋚⁑', '⦮✩ᐄ', '⊝➚✿⊍', '✏♽➙∭',
         '✢❁✘☪', '❆➬✺⊐', '┛⌛⦭', '⋖⊋', '➭⚅', '∎ᚍ', '⛢ᚄ', '⛣⏭ᐖ⇅', '⊏✱☮⧂', '✺⊐', '⋒ᐈ∔', '┒⧁', '∱–⁖', '┙✦', '⦪ᐃ', 'ᐛ┎',
         'ᐌᚅ',
         '∳✘', '⦾¤', '♼⌘', '♾➞', '☫⧈', '➤ↆ', '⧀ᚊ', '✡‡', '✞✫', 'ᚌ⦮', '∬⦷', 'ᐅ✾⧖', '➪⊉', '⧗∇', '⧏∋', '✲➬⊈', 'ᚃ⁕➘', '࿘–',
         '⇆✖', '✩✫¤', 'ᐅᚄ', '∇✮⦹', 'ᐖ✼', '⧑⦻', '⧳⁘⧗', '⧃⊝', '➮࿖…✣', '┗✸', '✶∮⦪➥', '֎⦼', '❀ᚍ', '‗➨➦∱', '⊇☭', '✤‣', 'ↈ☷',
         '✏†', '♾➪', '✷ᐓ', '❅☳', '⧗✶✷ᚌ', '−↨', '☵⋙⧇⁐', '⦽⊞', 'Ↄ⊏┎', '➭✫', '➢ᐔ', '⁆⇊', '✛☮➯', '⊑⌚', '┙⛦', '⦫✪', '⧑✵✬',
         '⚉∈ᐚ',
         '∔✳', '✒⊍∅', '⋐ᐃ', '✹⋖', '✥⋔⛨', '࿗✗', '‖‡', '⚂∯✘¤', '✮↺', '⚄❃∉', '⊒⊝', '┌⚁', '✸∓', '⧫➬', '⧮✟', 'ᐗ➚', 'ᐊ❆',
         '⧰⦾',
         'ᚌ∅ᐖ', '‡☳┑', '⊜⦷', '∨⦻☯', '⇊⧆', '✶⏯', '⚈⚂', 'ᐎ✹', '✼⁂⦰', '✰ᐈ', '┒ᚏ', '–࿗', 'ᚈ⁐†', '✔❃⊒', '⇆ᐅ⧁', '┏⦨', '└‒',
         '☸⚅',
         '⊘➧', '⛧≫', '➯┖⧏',
         'ↂ⁙⧳', '⦭⊄']]
    __mid = ['⦻⊈↺', '⁌⊢✛', '➚‒∅', '➥↶∐ᐉ', 'ᐁ✗⏮ᚆ', '∲⋓ᚎ⊌', '⋕ↁ⚆', '⊝⦽✢', '⛤⇉ᐄ', '⋛⿻⚀', '✤⧎ↇ✻', '✿➡❈✬', '⊓⧊❉•',
             '‖ᐇ⧭ᚋ', '✕Ↄ⋗∯', '∪⇆┚', '➘┕ᚈ', '⧑࿖⧨', '✐➦⦺∭', '⧔❂⧓⛦', '⋐⁕☩', '⧫⧇‣➢', '☶⁝⧉✶', '↹┌⧐', '⊗⚉⁆࿕', '֎ↂ⦨ᚇ',
             '✸⊘ᐆᚉ', '➫⊍⧃', '┓✒➟✷', '☭⇈⁂', '⇊ↈ⚁ᐏ', '✩¢➯⋔', 'ᐋ┗ᐕ└', '≫…┖⊅', '✮☴➠ᐘ', '⦸∏ᐓ⛧', 'ᚂ⦹ᐚ', '✎⊖✯⌚',
             '⊟❃⌗∮', '❅┏⚇✼', '♽✥ᐐ⚄', '✙☬⧅', '⊣➛➬', '✣⛥⁍┑', '⦵☯⊜', '✽—ᐔ☸', '✧✠⦿✖', '≪➝➙⧲', '⦴✭✔➧', '⋚✑‑−',
             '⧯✝ᐍ⦲', '⧮⊕⧳⁋', '⧩⦰⧱❁', '⛡⧕✏', '↨∧⧌⁙', '⌙⁓∩', '➜ᐙ❆⁛', '∌⦯✵✳', '⚂⋑⧬֍', '⊒┐⊇⧪', '┘⇄⦩', 'ᐂ✪†', '⦳⧆✹',
             'ᐒ⋙⦫―', '⁐⦱☱⛨', 'ᚃ➨⊞', '↷∉‗', 'ↇ∨✢ᐍ', '⋙❋‒', '≫Ↄ┛⚁', '⚄⧱⧩ᐊ', '⌛➟⌘']

    __alpha = list(
        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!"#$%&\'()*+’,“”—-./:;<=>?@[\\]^_`{|}~ \t\n\r\x0b\x0c')
    __deckey = {'1': ('ᐎ⚈', 'ᐆ☯⊎', '┘⦩⇄', '✑ᐑᐋ֍', '∧↨ᚇ', '⧑⧨࿖', '➨❉☶'),
                '2': ('┍➮', '֍∩✼ᐍ', '✚✰', '⋖⚃⛣ᐙ', '⦳∳➜⊕', '✐∭⦺➦', '∇✐ᚊ⊔'),
                '3': ('⊎✜', '⊡∏∨⦾', 'ᐂ†✪', '−‗┕┍', 'ᚊ⋛∔⊏', '⧔⧓❂⛦', '⊋⧔ↆ⋗'),
                '4': ('⁊⁘∍', '⁂➝⧊', '✹⦳⧆', '⧬↨', '⊗ᐛ➤∲', '⁕⋐☩', '⧉ↇ✝ᚄ'),
                '5': ('∮⌗❃⊟', '―⛣☱ᚄ', 'ᐒ⋙―⦫', '‣☮', '┙⊔✕⇇', '⧫➢‣⧇', '¤⁕∋'),
                '6': ('✼⚇┏❅', '☭✺⌗⧏', '⛨⁐☱⦱', 'ᐁᐒ⁌', 'ᚎ⊋⿻', '✶⁝⧉☶', 'ᚇ⧃⧯'),
                '7': ('⚄ᐐ✥♽', '⦶⦿', '☷⏯', '✦—', '✑✹┌⋒', '↹⧐┌', '⦴✸∱⧇'),
                '8': ('⧅☬✙', '➥➜⌙⊖', 'ᚃ⊞➨', '⋒⋕✷', '☮⧔✦', '⚉࿕⁆⊗', '⧗ᐊ⧂♾'),
                '9': ('➬➛⊣', '∊✩⧈', '∉‗↷', '➞❀⊞⛤', '❇⊅⛡⁊', '֎⦨ᚇↂ', '➮⚉┓'),
                '0': ('┑⁍⛥✣', '∌⇆', '✢∨ↇᐍ', 'ᐐ⧱✡∍', '—✺❆⊛', '⊘ᐆ✸ᚉ', '∊⋓┛ↁ')}

    def __encrypt(self, args, code=None):  # this method reverse a string
        __main = ""
        __character = args
        self.code = code
        for i in __character.split(","):
            for j in i.split():
                __main += j[::-1] + " "
            __main += ","

        return self.__encrypt2(__main[0:len(__main) - 1], code)

    def __encrypt2(self, args, code=None):  # character shift function
        key = random.randint(3, 6)
        temp, mid = "", args
        leg = len(Main.__alpha)
        for i in range(5):
            for k in mid:
                ind = Main.__alpha.index(k)

                if ind + key >= leg:
                    temp += Main.__alpha[(ind + key) - leg]
                else:
                    temp += Main.__alpha[ind + key]
            mid, temp = temp, ""
        mid += str(key)
        return self.__encrept3(mid, code)

    def __encrept3(self, args, code=None):
        key = random.randint(0, len(Main.__code) - 1)
        zipcode = dict(zip(Main.__alpha, Main.__code[key]))
        argslen = len(args)
        temp = ""
        temp2 = list(args)
        midlen = len(Main.__mid)
        if code == 1:
            for i in range(argslen // 4):
                temp2.insert(random.randint(0, len(args) - 1), self.__mid[random.randint(0, len(self.__mid) - 1)])
        for i in temp2:
            if i in self.__alpha:
                temp += zipcode[i]
        temp += zipcode[str(key)]
        ie = len(temp)
        part1 = temp[ie // 2:]
        part2 = temp[:ie // 2]
        temp = part1[::-1] + part2[::-1]
        return temp

    def Encryption(self, args, code=None):
        return self.__encrypt(args, code)

    def __decryption1(self, args, code=None):
        arglen = len(args)
        n = 0
        dekey = ""
        ie = len(args)
        part1 = args[ie // 2:]
        part2 = args[:ie // 2]
        args = part1[::-1] + part2[::-1]
        key = args[arglen - 4:]
        while n != 5:
            for i in Main.__deckey:
                if key in Main.__deckey[i]:
                    n += 1
                    dekey = int(i)
                    n = 5
            else:
                key = key[1:]
        zipcode = dict(zip(Main.__code[dekey], Main.__alpha))
        for i in zipcode:
            args = args.replace(i, zipcode[i])
        if code == 1:
            for i in Main.__mid:
                args = args.replace(i, "")
        return self.__decryption2(args[0:len(args) - 1])

    def __decryption2(self, args):
        __main = ""
        __character = args
        key = int(__character[-1])
        __character = __character[0:len(__character) - 1]
        leng = len(Main.__alpha)
        for i in range(5):
            for k in __character:
                index = Main.__alpha.index(k)
                if index < key:
                    __main += Main.__alpha[leng - (key - index)]
                else:
                    __main += Main.__alpha[index - key]
            __character, __main = __main, ""
        for i in __character.split(","):
            for j in i.split():
                __main += j[::-1] + " "
            __main += ","
        __main = __main[0:len(__main) - 1]

        return __main

    def Decryption(self, args, code=None):
        return self.__decryption1(args, code)
